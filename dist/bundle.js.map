{"version":3,"file":"bundle.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN2D;AAC3D;AACA;AACA;AACA;AACA,qBAAqB,wJAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://rivet-plugin-tuesday-crowd/webpack/universalModuleDefinition","webpack://rivet-plugin-tuesday-crowd/webpack/bootstrap","webpack://rivet-plugin-tuesday-crowd/webpack/runtime/define property getters","webpack://rivet-plugin-tuesday-crowd/webpack/runtime/hasOwnProperty shorthand","webpack://rivet-plugin-tuesday-crowd/webpack/runtime/make namespace object","webpack://rivet-plugin-tuesday-crowd/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { guidPluginNode } from \"./nodes/GuidPluginNode.js\";\n// A Rivet plugin must default export a plugin initializer function. This takes in the Rivet library as its\n// only parameter. This function must return a valid RivetPlugin object.\nconst plugin = (rivet) => {\n    // Initialize any nodes in here in the same way, by passing them the Rivet library.\n    const guidNode = guidPluginNode(rivet);\n    // The plugin object is the definition for your plugin.\n    const tuesdayCrowdPlugin = {\n        // The ID of your plugin should be unique across all plugins.\n        id: \"tuesday-crowd-plugin\",\n        // The name of the plugin is what is displayed in the Rivet UI.\n        name: \"Tuesday Crowd Plugin\",\n        // Define all configuration settings in the configSpec object.\n        configSpec: {},\n        // Define any additional context menu groups your plugin adds here.\n        contextMenuGroups: [],\n        // Register any additional nodes your plugin adds here. This is passed a `register`\n        // function, which you can use to register your nodes.\n        register: (register) => {\n            register(guidNode);\n        },\n    };\n    // Make sure to return your plugin definition.\n    return tuesdayCrowdPlugin;\n};\n// Make sure to default export your plugin.\nexport default plugin;\n"],"names":[],"sourceRoot":""}